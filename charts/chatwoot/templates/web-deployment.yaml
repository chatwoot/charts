apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "chatwoot.fullname" . }}-web
  creationTimestamp: null
  labels:
    app: {{ template "chatwoot.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ int .Values.web.replica }}
  selector:
    matchLabels:
      app: {{ template "chatwoot.fullname" . }}
      release: "{{ .Release.Name }}"
      role: web
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ template "chatwoot.fullname" . }}
        release: "{{ .Release.Name }}"
        role: web
    spec:
      containers:
        - args:
            - bundle
            - exec
            - rails
            - s
            - -p
            - {{ .Values.services.internlPort | quote}}
            - -b
            - 0.0.0.0
          command:
            - docker/entrypoints/rails.sh
          envFrom:
            - configMapRef:
                name: {{ template "chatwoot.fullname" . }}-env
          env:
          {{- if .Values.postgresql.existingSecret }}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgresql.existingSecret }}
                key: {{ .Values.postgresql.existingSecretKey }}
          {{- end }}
          {{- if .Values.redis.auth.existingSecret }}
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.redis.auth.existingSecret }}
                key: {{ .Values.redis.auth.existingSecretKey }}
          {{- end }}
          {{- if .Values.storage.existingSecret }}
          {{- if eq .Values.storage.activeService "s3_compatible" }}
          - name: STORAGE_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Values.storage.existingSecret }}
                key: access-key-id
          - name: STORAGE_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.storage.existingSecret }}
                key: secret-access-key
          {{- end }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          name: {{ .Chart.Name }}-web
          ports:
            - containerPort: {{ int .Values.services.internlPort }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
            {{- end }}
status: {}
