# Default values for chatwoot
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: chatwoot/chatwoot
  tag: v1.18.1
  pullPolicy: IfNotPresent

web:
  replica: 1
worker:
  replica: 1
  # Overrides the image tag whose default is the chart appVersion.

services:
  name: chatwoot
  internlPort: 3000
  targetPort: 3000
  type: LoadBalancer

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: chatwoot-service
              port:
                number: 3000
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  enabled: true
  nameOverride: chatwoot-postgresql
  postgresqlDatabase: chatwoot_production
  postgresqlUsername: postgres
  postgresqlPassword: postgres
  # The following variables are only used when internal PG is disabled
  # postgresqlHost: postgres
  # postgresqlPort: 5432
  # When defined the `postgresqlPassword` field is ignored
  # existingSecret: secret-name
  # existingSecretKey: postgresql-password

redis:
  enabled: true
  nameOverride: chatwoot-redis
  # The following variables are only used when internal Redis is disabled
  # host: redis
  # Just omit the password field if your redis cluster doesn't use password
  password: redis
  # port: 6379
  # When defined the `password` field is ignored
  # existingSecret: secret-name
  # existingSecretKey: redis-password
  master:
    persistence:
      enabled: true
      # If change pvc size redis.master.persistence.size: 20Gi

# Provide affinity for hooks if needed
hooks:
  affinity: {}
  migrate:
    env: []
    resources:
      limits:
        memory: 1000Mi
      requests:
        memory: 1000Mi
    # Defaults to performing the DB migration job after the install/upgrade.
    # Can be overridden to "pre-install,pre-upgrade" with caution to perform migrations that are sometimes required for the deployment to become healthy
    hookAnnotation: "post-install,post-upgrade"

# ENVIRONMENT VARIABLES
env:
  ACTIVE_STORAGE_SERVICE: local
  ASSET_CDN_HOST: ""
  AWS_ACCESS_KEY_ID: ""
  AWS_REGION: ""
  AWS_SECRET_ACCESS_KEY: ""
  AWS_ENDPOINT_URL: ""
  ENABLE_ACCOUNT_SIGNUP: "false"
  FB_APP_ID: ""
  FB_APP_SECRET: ""
  FB_VERIFY_TOKEN: ""
  FORCE_SSL: "false"
  FRONTEND_URL: "http://0.0.0.0:3000/"
  IOS_APP_ID: 6C953F3RX2.com.chatwoot.app
  LOG_LEVEL: info
  LOG_SIZE: "500"
  MAILER_INBOUND_EMAIL_DOMAIN: ""
  MAILER_SENDER_EMAIL: ""
  MAILGUN_INGRESS_SIGNING_KEY: ""
  MANDRILL_INGRESS_API_KEY: ""
  POSTGRES_HOST: chatwoot-chatwoot-postgresql
  POSTGRES_PORT: 5432
  POSTGRES_PASSWORD: "postgres"
  POSTGRES_USERNAME: "postgres"
  POSTGRES_DB: chatwoot_production
  RAILS_ENV: production
  RAILS_INBOUND_EMAIL_PASSWORD: ""
  RAILS_INBOUND_EMAIL_SERVICE: ""
  RAILS_LOG_TO_STDOUT: "true"
  RAILS_MAX_THREADS: "5"
  REDIS_PASSWORD: "redis"
  REDIS_SENTINEL_MASTER_NAME: ""
  REDIS_SENTINELS: ""
  REDIS_HOST: "chatwoot-chatwoot-redis-master"
  REDIS_URL: redis://redis@chatwoot-chatwoot-redis-master:6379
  S3_BUCKET_NAME: ""
  SECRET_KEY_BASE: wsedrfghjhygtfrdecfvbhnygtfvbtyftctdrxresxcygvujhb
  SENTRY_DSN: ""
  SLACK_CLIENT_ID: ""
  SLACK_CLIENT_SECRET: ""
  SMTP_ADDRESS: ""
  SMTP_AUTHENTICATION: plain
  SMTP_ENABLE_STARTTLS_AUTO: "true"
  SMTP_OPENSSL_VERIFY_MODE: none
  SMTP_PASSWORD: ""
  SMTP_PORT: "587"
  SMTP_USERNAME: ""
  TWITTER_APP_ID: ""
  TWITTER_CONSUMER_KEY: ""
  TWITTER_CONSUMER_SECRET: ""
  TWITTER_ENVIRONMENT: ""
  USE_INBOX_AVATAR_FOR_BOT: "true"
  CHATWOOT_INSTALLATION_ENV: "helm"
